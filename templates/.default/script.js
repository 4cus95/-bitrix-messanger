$(document).ready(function () {    var editMessageId = false;    var messageReplyId = false;    //files upload ajax    $('input[type=file]').on('change', function() {        let files = this.files;        event.stopPropagation(); // stop js events        event.preventDefault();        if (typeof files == 'undefined') return;        var data = new FormData();        // append file to form data        $.each(files, function(key, value) {            data.append(key, value);        });        // request id variable        data.append('file_ajax_upload', 1);        $.ajax({            url: '/local/components/test_work/messanger/file_upload.php',            type: 'POST', // важно!            data: data,            cache: false,            dataType: 'json',            processData: false,            contentType: false,            success: function(respond, status, jqXHR) {                if (typeof respond.error === 'undefined') {                    //We need to get the file id and send the respond.file_id message                    BX.ajax.runComponentAction(componentName, 'addMessageToChat', {                        mode: 'class',                        signedParameters: signerParams,                        data: {                            message: '',                            messageReplyTo: messageReplyId ? messageReplyId :0,                            fileId: respond.file_id                        }                    });                }                else {                    alert('Ошибка загрузки файла');                }            },            error: function(jqXHR, status, errorThrown) {                alert('Ошибка сервера');            }        });    });    BX.addCustomEvent("onPullEvent", function(module_id,command,params) {        if(module_id === 'my_messanger') {            if(command === 'add_message') {                let container = $('.chat-window .messages');                let newMessage = document.createElement('DIV');                newMessage.className = 'single-message';                newMessage.dataset.id = params.MESSAGE_ID;                newMessage.innerHTML = params.OUTPUT_MESSAGE;                container.append(newMessage);                $(newMessage).find('.delete').click(deleteButtonListener);                $(newMessage).find('.edit').click(editButtonListener);                $(newMessage).find('.reply').click(replyButtonListener);            } else if(command === 'delete_message') {                $('.single-message[data-id="' + params.MESSAGE_ID + '"]').remove();            } else if(command === 'edit_message') {                $('.single-message[data-id="' + params.MESSAGE_ID + '"] .message-text').text(params.OUTPUT_MESSAGE);            }        }        BX.PULL.extendWatch('MY_MESSANGER');    });    function editButtonListener() {        let messId = $(this).attr('data-id');        let message = $('.single-message[data-id="' + messId + '"] .message-text').text();        $('.text-message textarea').val(message);        editMessageId = messId;    }    function replyButtonListener() {        let messId = $(this).attr('data-id');        let message = $('.single-message[data-id="' + messId + '"] .message-text').text();        let replyPreview = message;        if(replyPreview.length > 130) {            replyPreview = replyPreview.substr(0, 130) + '...';        }        $('.reply-message .message-text').text(replyPreview);        messageReplyId = messId;        $('.reply-container').removeClass('hide');    }    function deleteButtonListener() {        let thisButton = this;        BX.ajax.runComponentAction(componentName, 'deleteMessage', {            mode: 'class',            signedParameters: signerParams,            data: {                messageId: $(thisButton).attr('data-id')            }        });    }    function cleanReply() {        $('.reply-container').addClass('hide');        messageReplyId = false;    }    function cleanTextArea() {        $('.text-message textarea').val('');    }    $('#send_button').click(function () {        if(editMessageId) {            BX.ajax.runComponentAction(componentName, 'editMessage', {                mode: 'class',                signedParameters: signerParams,                data: {                    messageId: editMessageId,                    message: $('.text-message textarea').val()                }            }).then(function (response) {                cleanTextArea();                editMessageId = false;                cleanReply();            });        } else {            BX.ajax.runComponentAction(componentName, 'addMessageToChat', {                mode: 'class',                signedParameters: signerParams,                data: {                    message: $('.text-message textarea').val(),                    messageReplyTo: messageReplyId ? messageReplyId :0,                }            }).then(function (response) {                cleanTextArea();                cleanReply();            });        }    });    $('.close-reply').click(function () {        cleanReply();    });    $('.delete').click(deleteButtonListener);    $('.edit').click(editButtonListener);    $('.reply').click(replyButtonListener);    $('#send_file').click(function () {        $('#file_input').click();    })})